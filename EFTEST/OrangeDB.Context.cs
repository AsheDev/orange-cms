//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFTEST
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DevOrangeEntities : DbContext
    {
        public DevOrangeEntities()
            : base("name=DevOrangeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccessHistory> AccessHistories { get; set; }
        public virtual DbSet<EditType> EditTypes { get; set; }
        public virtual DbSet<NavigationHistory> NavigationHistories { get; set; }
        public virtual DbSet<NewsletterInfo> NewsletterInfoes { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<PostComment> PostComments { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<TableListing> TableListings { get; set; }
        public virtual DbSet<Tag> Tags { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<ChangeLog> ChangeLogs { get; set; }
        public virtual DbSet<Password> Passwords { get; set; }
        public virtual DbSet<PostCommentEditHistory> PostCommentEditHistories { get; set; }
        public virtual DbSet<PostEditHistory> PostEditHistories { get; set; }
    
        public virtual ObjectResult<CommentAdd_Result> CommentAdd(Nullable<int> userId, Nullable<int> callingUserId, Nullable<int> postId, string providedName, string body, string editKey, Nullable<bool> topLevel, Nullable<int> parentCommentId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            var providedNameParameter = providedName != null ?
                new ObjectParameter("ProvidedName", providedName) :
                new ObjectParameter("ProvidedName", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var editKeyParameter = editKey != null ?
                new ObjectParameter("EditKey", editKey) :
                new ObjectParameter("EditKey", typeof(string));
    
            var topLevelParameter = topLevel.HasValue ?
                new ObjectParameter("TopLevel", topLevel) :
                new ObjectParameter("TopLevel", typeof(bool));
    
            var parentCommentIdParameter = parentCommentId.HasValue ?
                new ObjectParameter("ParentCommentId", parentCommentId) :
                new ObjectParameter("ParentCommentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommentAdd_Result>("CommentAdd", userIdParameter, callingUserIdParameter, postIdParameter, providedNameParameter, bodyParameter, editKeyParameter, topLevelParameter, parentCommentIdParameter);
        }
    
        public virtual ObjectResult<CommentApproval_Result> CommentApproval(Nullable<int> userId, Nullable<int> callingUserId, Nullable<int> commentId, Nullable<byte> approval)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(int));
    
            var approvalParameter = approval.HasValue ?
                new ObjectParameter("Approval", approval) :
                new ObjectParameter("Approval", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommentApproval_Result>("CommentApproval", userIdParameter, callingUserIdParameter, commentIdParameter, approvalParameter);
        }
    
        public virtual ObjectResult<CommentGet_Result> CommentGet(Nullable<int> commentId)
        {
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommentGet_Result>("CommentGet", commentIdParameter);
        }
    
        public virtual ObjectResult<CommentGetAll_Result> CommentGetAll(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommentGetAll_Result>("CommentGetAll", postIdParameter);
        }
    
        public virtual ObjectResult<CommentGetChildren_Result> CommentGetChildren(Nullable<int> commentId)
        {
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommentGetChildren_Result>("CommentGetChildren", commentIdParameter);
        }
    
        public virtual ObjectResult<CommentGetTopLevel_Result> CommentGetTopLevel(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommentGetTopLevel_Result>("CommentGetTopLevel", postIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> CommentRemove(Nullable<int> userId, Nullable<int> callingUserId, Nullable<int> commentId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("CommentRemove", userIdParameter, callingUserIdParameter, commentIdParameter);
        }
    
        public virtual ObjectResult<CommentUpdate_Result> CommentUpdate(Nullable<int> userId, Nullable<int> callingUserId, Nullable<int> commentId, string providedName, string body)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(int));
    
            var providedNameParameter = providedName != null ?
                new ObjectParameter("ProvidedName", providedName) :
                new ObjectParameter("ProvidedName", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommentUpdate_Result>("CommentUpdate", userIdParameter, callingUserIdParameter, commentIdParameter, providedNameParameter, bodyParameter);
        }
    
        public virtual ObjectResult<LogIn_Result> LogIn(string username, Nullable<int> userId)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LogIn_Result>("LogIn", usernameParameter, userIdParameter);
        }
    
        public virtual ObjectResult<LogOut_Result> LogOut(string username, Nullable<int> userId)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LogOut_Result>("LogOut", usernameParameter, userIdParameter);
        }
    
        public virtual ObjectResult<PasswordAdd_Result> PasswordAdd(Nullable<int> userId, Nullable<int> callingUserId, string hashedPassword, string salt, Nullable<bool> expires, Nullable<System.DateTime> expiration)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("HashedPassword", hashedPassword) :
                new ObjectParameter("HashedPassword", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var expiresParameter = expires.HasValue ?
                new ObjectParameter("Expires", expires) :
                new ObjectParameter("Expires", typeof(bool));
    
            var expirationParameter = expiration.HasValue ?
                new ObjectParameter("Expiration", expiration) :
                new ObjectParameter("Expiration", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordAdd_Result>("PasswordAdd", userIdParameter, callingUserIdParameter, hashedPasswordParameter, saltParameter, expiresParameter, expirationParameter);
        }
    
        public virtual ObjectResult<PasswordGet_Result> PasswordGet(Nullable<int> userId, string username)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordGet_Result>("PasswordGet", userIdParameter, usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PasswordRecordAttempt(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PasswordRecordAttempt", usernameParameter);
        }
    
        public virtual ObjectResult<PasswordReset_Result> PasswordReset(Nullable<int> userId, Nullable<int> callingUserId, string authenticationURL, Nullable<System.DateTime> created, Nullable<System.DateTime> expires)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var authenticationURLParameter = authenticationURL != null ?
                new ObjectParameter("AuthenticationURL", authenticationURL) :
                new ObjectParameter("AuthenticationURL", typeof(string));
    
            var createdParameter = created.HasValue ?
                new ObjectParameter("Created", created) :
                new ObjectParameter("Created", typeof(System.DateTime));
    
            var expiresParameter = expires.HasValue ?
                new ObjectParameter("Expires", expires) :
                new ObjectParameter("Expires", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordReset_Result>("PasswordReset", userIdParameter, callingUserIdParameter, authenticationURLParameter, createdParameter, expiresParameter);
        }
    
        public virtual ObjectResult<PasswordResetGet_Result> PasswordResetGet(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordResetGet_Result>("PasswordResetGet", userIdParameter);
        }
    
        public virtual ObjectResult<PasswordSettingsGet_Result> PasswordSettingsGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordSettingsGet_Result>("PasswordSettingsGet");
        }
    
        public virtual ObjectResult<PasswordSettingsUpdate_Result> PasswordSettingsUpdate(Nullable<int> userId, Nullable<int> callingUserId, Nullable<int> maxAttempts, Nullable<int> expirationInDays, Nullable<int> resetExpirationInMinutes)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var maxAttemptsParameter = maxAttempts.HasValue ?
                new ObjectParameter("MaxAttempts", maxAttempts) :
                new ObjectParameter("MaxAttempts", typeof(int));
    
            var expirationInDaysParameter = expirationInDays.HasValue ?
                new ObjectParameter("ExpirationInDays", expirationInDays) :
                new ObjectParameter("ExpirationInDays", typeof(int));
    
            var resetExpirationInMinutesParameter = resetExpirationInMinutes.HasValue ?
                new ObjectParameter("ResetExpirationInMinutes", resetExpirationInMinutes) :
                new ObjectParameter("ResetExpirationInMinutes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordSettingsUpdate_Result>("PasswordSettingsUpdate", userIdParameter, callingUserIdParameter, maxAttemptsParameter, expirationInDaysParameter, resetExpirationInMinutesParameter);
        }
    
        public virtual ObjectResult<PasswordUpdate_Result> PasswordUpdate(Nullable<int> userId, Nullable<int> callingUserId, string hashedPassword, string salt, Nullable<bool> expires, Nullable<System.DateTime> expiration, Nullable<int> attempts, Nullable<bool> isLocked)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var hashedPasswordParameter = hashedPassword != null ?
                new ObjectParameter("HashedPassword", hashedPassword) :
                new ObjectParameter("HashedPassword", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var expiresParameter = expires.HasValue ?
                new ObjectParameter("Expires", expires) :
                new ObjectParameter("Expires", typeof(bool));
    
            var expirationParameter = expiration.HasValue ?
                new ObjectParameter("Expiration", expiration) :
                new ObjectParameter("Expiration", typeof(System.DateTime));
    
            var attemptsParameter = attempts.HasValue ?
                new ObjectParameter("Attempts", attempts) :
                new ObjectParameter("Attempts", typeof(int));
    
            var isLockedParameter = isLocked.HasValue ?
                new ObjectParameter("IsLocked", isLocked) :
                new ObjectParameter("IsLocked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PasswordUpdate_Result>("PasswordUpdate", userIdParameter, callingUserIdParameter, hashedPasswordParameter, saltParameter, expiresParameter, expirationParameter, attemptsParameter, isLockedParameter);
        }
    
        public virtual ObjectResult<PermissionGet_Result> PermissionGet(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PermissionGet_Result>("PermissionGet", roleIdParameter);
        }
    
        public virtual ObjectResult<PermissionGetByUserId_Result> PermissionGetByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PermissionGetByUserId_Result>("PermissionGetByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<PermissionUpdate_Result> PermissionUpdate(Nullable<int> roleId, Nullable<bool> managePosts, Nullable<bool> managePostComments, Nullable<bool> canComment, Nullable<bool> manageUsers, Nullable<bool> accessSettings, Nullable<bool> canImpersonate, Nullable<bool> viewMetrics, Nullable<bool> isActive, Nullable<int> userId, Nullable<int> callingUserId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var managePostsParameter = managePosts.HasValue ?
                new ObjectParameter("ManagePosts", managePosts) :
                new ObjectParameter("ManagePosts", typeof(bool));
    
            var managePostCommentsParameter = managePostComments.HasValue ?
                new ObjectParameter("ManagePostComments", managePostComments) :
                new ObjectParameter("ManagePostComments", typeof(bool));
    
            var canCommentParameter = canComment.HasValue ?
                new ObjectParameter("CanComment", canComment) :
                new ObjectParameter("CanComment", typeof(bool));
    
            var manageUsersParameter = manageUsers.HasValue ?
                new ObjectParameter("ManageUsers", manageUsers) :
                new ObjectParameter("ManageUsers", typeof(bool));
    
            var accessSettingsParameter = accessSettings.HasValue ?
                new ObjectParameter("AccessSettings", accessSettings) :
                new ObjectParameter("AccessSettings", typeof(bool));
    
            var canImpersonateParameter = canImpersonate.HasValue ?
                new ObjectParameter("CanImpersonate", canImpersonate) :
                new ObjectParameter("CanImpersonate", typeof(bool));
    
            var viewMetricsParameter = viewMetrics.HasValue ?
                new ObjectParameter("ViewMetrics", viewMetrics) :
                new ObjectParameter("ViewMetrics", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PermissionUpdate_Result>("PermissionUpdate", roleIdParameter, managePostsParameter, managePostCommentsParameter, canCommentParameter, manageUsersParameter, accessSettingsParameter, canImpersonateParameter, viewMetricsParameter, isActiveParameter, userIdParameter, callingUserIdParameter);
        }
    
        public virtual int PostAdd(Nullable<int> userId, Nullable<int> callingUserId, string subject, string body, Nullable<System.DateTime> effectiveDate, Nullable<bool> isPubliclyVisible)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var isPubliclyVisibleParameter = isPubliclyVisible.HasValue ?
                new ObjectParameter("IsPubliclyVisible", isPubliclyVisible) :
                new ObjectParameter("IsPubliclyVisible", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostAdd", userIdParameter, callingUserIdParameter, subjectParameter, bodyParameter, effectiveDateParameter, isPubliclyVisibleParameter);
        }
    
        public virtual ObjectResult<PostGet_Result> PostGet(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostGet_Result>("PostGet", postIdParameter);
        }
    
        public virtual ObjectResult<PostGetAll_Result> PostGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostGetAll_Result>("PostGetAll");
        }
    
        public virtual ObjectResult<PostGetLatest_Result> PostGetLatest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostGetLatest_Result>("PostGetLatest");
        }
    
        public virtual ObjectResult<PostHistoryGetAll_Result> PostHistoryGetAll(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostHistoryGetAll_Result>("PostHistoryGetAll", postIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> PostRemove(Nullable<int> postId, Nullable<int> userId, Nullable<int> callingUserId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("PostRemove", postIdParameter, userIdParameter, callingUserIdParameter);
        }
    
        public virtual int PostUpdate(Nullable<int> postId, Nullable<int> userId, Nullable<int> callingUserId, string subject, string body, Nullable<System.DateTime> effectiveDate, Nullable<bool> isPubliclyVisible)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var isPubliclyVisibleParameter = isPubliclyVisible.HasValue ?
                new ObjectParameter("IsPubliclyVisible", isPubliclyVisible) :
                new ObjectParameter("IsPubliclyVisible", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostUpdate", postIdParameter, userIdParameter, callingUserIdParameter, subjectParameter, bodyParameter, effectiveDateParameter, isPubliclyVisibleParameter);
        }
    
        public virtual ObjectResult<RecordAccess_Result> RecordAccess(Nullable<int> userId, Nullable<int> callingUserId, Nullable<bool> action, Nullable<bool> success, string operatingSystem, string iPAddress)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(bool));
    
            var successParameter = success.HasValue ?
                new ObjectParameter("Success", success) :
                new ObjectParameter("Success", typeof(bool));
    
            var operatingSystemParameter = operatingSystem != null ?
                new ObjectParameter("OperatingSystem", operatingSystem) :
                new ObjectParameter("OperatingSystem", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecordAccess_Result>("RecordAccess", userIdParameter, callingUserIdParameter, actionParameter, successParameter, operatingSystemParameter, iPAddressParameter);
        }
    
        public virtual ObjectResult<RecordAccessGet_Result> RecordAccessGet(Nullable<int> accessId)
        {
            var accessIdParameter = accessId.HasValue ?
                new ObjectParameter("AccessId", accessId) :
                new ObjectParameter("AccessId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecordAccessGet_Result>("RecordAccessGet", accessIdParameter);
        }
    
        public virtual ObjectResult<RecordAccessGetAll_Result> RecordAccessGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecordAccessGetAll_Result>("RecordAccessGetAll");
        }
    
        public virtual ObjectResult<RecordNavigation_Result> RecordNavigation(Nullable<int> userId, Nullable<int> callingUserId, Nullable<int> pageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecordNavigation_Result>("RecordNavigation", userIdParameter, callingUserIdParameter, pageIdParameter);
        }
    
        public virtual ObjectResult<RecordNavigationGet_Result> RecordNavigationGet(Nullable<int> navId)
        {
            var navIdParameter = navId.HasValue ?
                new ObjectParameter("NavId", navId) :
                new ObjectParameter("NavId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecordNavigationGet_Result>("RecordNavigationGet", navIdParameter);
        }
    
        public virtual ObjectResult<RecordNavigationGetAll_Result> RecordNavigationGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecordNavigationGetAll_Result>("RecordNavigationGetAll");
        }
    
        public virtual int TagAdd(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TagAdd", nameParameter);
        }
    
        public virtual ObjectResult<UserAdd_Result> UserAdd(string name, string email, Nullable<int> roleId, Nullable<int> userId, Nullable<int> callingUserId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserAdd_Result>("UserAdd", nameParameter, emailParameter, roleIdParameter, userIdParameter, callingUserIdParameter);
        }
    
        public virtual ObjectResult<UserGet_Result> UserGet(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserGet_Result>("UserGet", userIdParameter);
        }
    
        public virtual ObjectResult<UserGetAll_Result> UserGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserGetAll_Result>("UserGetAll");
        }
    
        public virtual ObjectResult<UserGetByGuid_Result> UserGetByGuid(Nullable<System.Guid> obfuscatedId)
        {
            var obfuscatedIdParameter = obfuscatedId.HasValue ?
                new ObjectParameter("ObfuscatedId", obfuscatedId) :
                new ObjectParameter("ObfuscatedId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserGetByGuid_Result>("UserGetByGuid", obfuscatedIdParameter);
        }
    
        public virtual ObjectResult<UserGetByUsername_Result> UserGetByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserGetByUsername_Result>("UserGetByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> UserRemove(Nullable<int> userId, Nullable<int> callingUserId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("UserRemove", userIdParameter, callingUserIdParameter);
        }
    
        public virtual ObjectResult<UserToggleInSystem_Result> UserToggleInSystem(Nullable<int> userId, string email)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserToggleInSystem_Result>("UserToggleInSystem", userIdParameter, emailParameter);
        }
    
        public virtual ObjectResult<UserUpdate_Result> UserUpdate(Nullable<int> userId, Nullable<int> callingUserId, Nullable<int> id, string name, string email, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var callingUserIdParameter = callingUserId.HasValue ?
                new ObjectParameter("CallingUserId", callingUserId) :
                new ObjectParameter("CallingUserId", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserUpdate_Result>("UserUpdate", userIdParameter, callingUserIdParameter, idParameter, nameParameter, emailParameter, roleIdParameter);
        }
    }
}
